---
# ScrollTrigger Bar Animation Specification (ECharts)
# Purpose: Define the exact behavior of scroll-driven bar height animation for Apache ECharts

name: scrolltrigger-bar-animation-echarts
version: 1.0.0
status: planned
description: |
  ScrollTrigger integration for an ECharts bar chart that animates bar heights
  from 0 to full height as the user scrolls. The chart section pins during
  animation and works independently of surrounding content.

# Core Requirements
requirements:
  - id: independent-animation
    description: Animation works regardless of page content above/below chart
    acceptance:
      - Chart animation triggers based on chart position only
      - No dependency on sections above or below the chart
      - Works with empty page or complex layouts
  
  - id: y-axis-fixed-scale
    description: Y-axis scale remains constant during animation
    acceptance:
      - Y-axis numbers (ticks) never change during scroll
      - Scale calculated once from max data value + 10% padding
      - Example: If max population is 715k, Y-axis shows 0-787k throughout
  
  - id: bar-height-animation
    description: Only bar visual heights animate, not data values shown
    acceptance:
      - Bars start at 0 visual height (not visible)
      - Bars grow proportionally from 0% to 100% of their data value
      - Bar heights scale with scroll progress (0-1)
      - All other chart elements (axes, labels, grid) remain static
  
  - id: chart-pinning
    description: Chart section pins in viewport during animation
    acceptance:
      - Chart becomes fixed position when animation starts
      - Chart stays pinned for entire animation duration
      - Pin releases when bars reach 100% height
      - Normal scrolling resumes after pin release
  
  - id: scroll-timing
    description: Animation timing is controlled by scroll distance
    acceptance:
      - Animation start: when chart top reaches near top of viewport
      - Animation duration: fixed pixel distance of scrolling (e.g., 600px)
      - Scrubbing enabled: scrolling forward/backward animates bars
      - Progress tied directly to scroll position (no time-based animation)

# Technical Implementation
implementation:
  framework: GSAP ScrollTrigger
  chart_library: Apache ECharts 5.x
  
  key_principles:
    - |
      Use GSAP ScrollTrigger to detect scroll position and calculate progress (0-1)
    - |
      Store original data values at chart initialization in a module-local `originalData`
    - |
      Fix Y-axis scale to max(data) * 1.1 so it never recalculates
    - |
      On scroll progress update: compute `data = originalData.map(val => val * progress)` and call `chart.setOption`
    - |
      Update chart with `lazyUpdate: true` to minimize layout thrash
    - |
      Pin the `.chart-container` element during the animation
  
  configuration:
    trigger: '.chart-container'
    start: 'top top'          # Chart top reaches viewport top
    end: '+=1000'             # 1000px total scroll distance
    scrub: 1                  # 1 second smooth scrubbing delay
    pin: true                 # Pin chart during animation
    markers: false            # Debug markers (set true to visualize)
    animation_ratio: 0.6      # Bars reach 100% at 60% of scroll (40% hold time)
  
  data_flow:
    initialization:
      - Compute and store original bar data and `maxValue`
      - Set axis max to `maxValue`; beginAtZero/min: 0
      - Initialize bars at 0 height via `setOption({ series: [{ data: zeros }] })`
    
    on_scroll_update:
      - Get scroll progress from ScrollTrigger (0-1)
      - Calculate new data: `data = originalData.map(val => val * progress)`
      - Force axis max: keep `xAxis.max` or `yAxis.max` set to `maxValue` (vertical vs horizontal)
      - Update chart: `chart.setOption({ series: [{ data }] }, { lazyUpdate: true, silent: true })`
    
    on_complete:
      - Restore full data using `originalData`
      - Ensure axis max is unchanged
      - Update chart via `setOption`
      - Release pin (handled by ScrollTrigger)

# Files Modified
files:
  - path: src/echarts/buildChart.js
    changes:
      - Add fixed axis max value to option configuration
      - Export helpers to read original data and max value if needed by ScrollTrigger module
  
  - path: src/scroll/scrolltrigger-echarts.js
    changes:
      - Store originalData in module scope
      - In initScrollTrigger: set bars to 0, configure ScrollTrigger with pin
      - In onUpdate: scale data by progress, force axis max
      - In onComplete: restore full data, force axis max
  
  - path: src/main-echarts.js
    changes:
      - Call enableScrollTrigger with proper configuration
      - Wait for GSAP/ScrollTrigger to load before initializing
      - Store ScrollTrigger instance for cleanup

# Configuration Options
options:
  start_position:
    description: When animation should start
    file: src/main-echarts.js
    line: ~220
    default: 'top top'
    examples:
      - 'top top': Start when chart top hits viewport top (no gap when pinned)
      - 'top center': Start when chart top hits viewport center
      - 'top top+=100px': Start when chart top is 100px from viewport top
      - 'top bottom-=200px': Start when chart top is 200px before viewport bottom
  
  total_scroll_distance:
    description: Total scroll distance for animation + hold
    file: src/main-echarts.js
    line: ~221
    default: '+=1000'
    unit: pixels
    examples:
      - '+=800': Shorter total duration (480px animate, 320px hold at 60% ratio)
      - '+=1000': Default (600px animate, 400px hold at 60% ratio)
      - '+=1500': Longer total duration (900px animate, 600px hold at 60% ratio)
    notes: |
      This is the TOTAL scroll distance. The actual animation duration depends
      on the animation_ratio setting. With ratio 0.6, bars animate for first
      60% of distance and hold for remaining 40%.
  
  animation_ratio:
    description: What percentage of scroll distance to animate (vs hold)
    file: src/scroll/scrolltrigger-echarts.js
    line: ~52
    default: 0.6
    range: 0.0 to 1.0
    examples:
      - ratio: 0.5
        description: 50% animation, 50% hold (more hold time)
        code: 'const animationProgress = Math.min(rawProgress / 0.5, 1);'
        result: 'With end +=1000: 500px animate, 500px hold'
      - ratio: 0.6
        description: 60% animation, 40% hold (default, balanced)
        code: 'const animationProgress = Math.min(rawProgress / 0.6, 1);'
        result: 'With end +=1000: 600px animate, 400px hold'
      - ratio: 0.7
        description: 70% animation, 30% hold (less hold time)
        code: 'const animationProgress = Math.min(rawProgress / 0.7, 1);'
        result: 'With end +=1000: 700px animate, 300px hold'
      - ratio: 0.8
        description: 80% animation, 20% hold (minimal hold)
        code: 'const animationProgress = Math.min(rawProgress / 0.8, 1);'
        result: 'With end +=1000: 800px animate, 200px hold'
      - ratio: 1.0
        description: 100% animation, 0% hold (no hold, immediate unpin)
        code: 'const animationProgress = Math.min(rawProgress / 1.0, 1);'
        result: 'With end +=1000: 1000px animate, 0px hold'
    notes: |
      Lower ratio = more hold time after bars reach 100%
      Higher ratio = less hold time after bars reach 100%
      
      Formula: animateDistance = totalDistance * ratio
               holdDistance = totalDistance * (1 - ratio)
  
  scrub_smoothness:
    description: Delay for smooth scrubbing
    default: 1
    unit: seconds
    examples:
      - 0: Immediate response (no smoothing)
      - 1: 1 second smooth delay
      - 2: 2 second smooth delay
  
  pin_enabled:
    description: Whether to pin chart during animation
    default: true
    values: [true, false]

# Debug Mode
debug:
  enable_markers:
    description: Show visual markers for start/end triggers
    file: src/main-echarts.js
    config: markers: true
    result: |
      Green marker: animation start position
      Red marker: animation end position
      Labels show trigger position details
  
  console_logging:
    - 'ScrollTrigger enabled - loading GSAP and ScrollTrigger (ECharts)'
    - 'ScrollTrigger loaded and ready (ECharts)'
    - 'ScrollTrigger is now available (ECharts)'
    - 'ScrollTrigger enabled for ECharts chart with pinning'

# Testing Scenarios
test_scenarios:
  - scenario: Chart at top of page
    setup: No content above chart
    expected: Animation starts when user scrolls down 100px
  
  - scenario: Chart below large hero section
    setup: 100vh section above chart
    expected: Animation starts when chart scrolls into view at top+100px
  
  - scenario: Multiple charts on page
    setup: Several chart containers with same class
    expected: Each chart animates independently when it enters viewport
  
  - scenario: Scroll forward and backward
    setup: Chart mid-animation
    expected: Bars grow/shrink smoothly following scroll direction
  
  - scenario: Fast scrolling
    setup: User scrolls quickly through animation zone
    expected: Bars animate to match scroll position with 1s smoothing
  
  - scenario: Browser resize during animation
    setup: Chart pinned, bars at 50%
    expected: Chart stays pinned, bars remain at 50%, layout adjusts

# Edge Cases
edge_cases:
  - case: User scrolls before GSAP loads
    behavior: Chart shows with standard ECharts animation
    fallback: IntersectionObserver triggers one-time `setOption` update
  
  - case: scrolltrigger-enabled class not present
    behavior: Chart displays normally without scroll animation
    fallback: Standard ECharts animations apply
  
  - case: Chart data changes after initialization
    behavior: originalData persists, new data ignored during animation
    solution: Disable/re-enable ScrollTrigger to reset
  
  - case: Very small viewport (mobile)
    behavior: Same animation behavior, adjust duration if needed
    consideration: May want shorter animation (end: '+=400')

# Performance Notes
performance:
  chart_updates:
    - Use `lazyUpdate: true` in `setOption` to reduce work per frame
    - Updates happen on scroll, throttled by GSAP's scrub setting
    - Expect ~60fps with proper implementation
  
  dom_manipulation:
    - Pin uses CSS transforms (GPU accelerated)
    - No layout thrashing during scroll
    - Minimal JavaScript execution per frame
  
  memory:
    - Store originalData once at initialization
    - Reuse arrays when possible; avoid new allocations inside onUpdate
    - Clean up ScrollTrigger instance on disable

# Future Enhancements
future:
  - Staggered bar animation (bars animate in sequence, not all at once)
  - Different easing functions for bar growth
  - Color transitions during animation (bars change color as they grow)
  - Mobile-specific configuration (shorter duration, different start point)
  - Parallax effects during pin (background movement)

# Related Specifications
related:
  - ../specs/speckit.build.yml: Original Chart.js main spec
  - ../specs/scrolltrigger-build.yml: Original Chart.js ScrollTrigger integration spec
  - ../specs/scrolltrigger-animation.spec.yml: Original Chart.js animation spec

# References
references:
  gsap_scrolltrigger: https://greensock.com/docs/v3/Plugins/ScrollTrigger
  echarts_docs: https://echarts.apache.org/en/option.html
  echarts_setOption: https://echarts.apache.org/en/api.html#echartsInstance.setOption


